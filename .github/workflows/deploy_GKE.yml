name: Build and Deploy to GKE

on:
  push:
    branches: [ trunk ]
env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT_DEV }}
  GKE_CLUSTER: react-tutorial
  GKE_ZONE: asia-northeast1
  DEPLOYMENT_NAME_STAGING: react-tutorial-staging
  DEPLOYMENT_NAME_PRODUCTION: react-tutorial-production 
  IMAGE: react-tutorial

jobs:
  build_test_publish_deploy:
    name: Build, Test, Publish and Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Authorize GCP
        uses: google-github-actions/auth@v0
        with:
          credentials_json: ${{ secrets.GKE_SA_KEY_DEV }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0
      
      - name: Configure Docker to use gcloud cli as auth helper
        run: |-
          gcloud --quiet auth configure-docker
          
      - name: Get GKE credentials
        uses: google-github-actions/get-gke-credentials@v0
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_ZONE }}
          project_id: ${{ secrets.GKE_PROJECT_DEV }}

      - name: Build image for test
        run: |-
          docker build --target build --tag $IMAGE:test .

      - name: Test
        run: |-
          docker run $IMAGE:test yarn test --watchAll=false

      - name: Build
        run: |-
          docker build -t "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA" .

      - name: Publish
        run: |-
          docker push "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA"
          
      - name: Deploy to GKE cluster (Staging)
        run: |-
          helm upgrade --install \
            --values=./helm/staging-values.yml \
            --set image.repository="gcr.io/$PROJECT_ID/$IMAGE" \
            --set image.tag=$GITHUB_SHA \
            $DEPLOYMENT_NAME_STAGING ./helm
          kubectl rollout status deployment/$DEPLOYMENT_NAME_STAGING
          kubectl get services -o wide

      - name: Run E2E Test on Staging 
        run: |-
          jq --version
          STAGING_IP=`gcloud container clusters get-credentials $GKE_CLUSTER \
            --region $GKE_ZONE \
            --project $PROJECT_ID && \
            kubectl get services react-tutorial-staging -o json | \
            jq '.status.loadBalancer.ingress[].ip' | \
            sed -r 's/[\"|']//g'`
          export CYPRESS_HOST=`printf "http://%s" $STAGING_IP`
          npm install cypress
          npx cypress run -b chrome

      - name: Deploy to GKE cluster (Production)
        run: |-
          helm upgrade --install \
            --values=./helm/production-values.yml \
            --set image.repository="gcr.io/$PROJECT_ID/$IMAGE" \
            --set image.tag=$GITHUB_SHA \
            $DEPLOYMENT_NAME_PRODUCTION ./helm
          kubectl rollout status deployment/$DEPLOYMENT_NAME_PRODUCTION
          kubectl get services -o wide
