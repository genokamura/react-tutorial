name: Build and Deploy to GKE

on:
  push:
    branches: [ trunk ]
env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT_DEV }}
  GKE_CLUSTER: react-tutorial
  GKE_ZONE: asia-northeast1
  DEPLOYMENT_NAME_STAGING: react-tutorial-staging
  DEPLOYMENT_NAME_PRODUCTION: react-tutorial-production 
  IMAGE: react-tutorial

jobs:
  build_test_publish_deploy:
    name: Build, Test, Publish and Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup gcloud cli
        uses: google-github-actions/setup-gcloud@v0.3.0
        with:
          service_account_key: ${{ secrets.GKE_SA_KEY_DEV }}
          project_id: ${{ secrets.GKE_PROJECT_DEV }}

      - name: Configure Docker to use gcloud cli as auth helper
        run: |-
          gcloud --quiet auth configure-docker

      - name: Get GKE credentials
        uses: google-github-actions/get-gke-credentials@v0.5.0
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_ZONE }}
          credentials: ${{ secrets.GKE_SA_KEY_DEV }}

      - name: Build
        run: |-
          docker build -t "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA" .
      
      - name: Test
        run: |-
          docker exec -w /usr/src/app "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA" yarn test --watchAll=false

      - name: Publish
        run: |-
          docker push "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA"
          
      - name: Deploy to GKE cluster (Staging)
        run: |-
          helm upgrade --install \
            --values=./helm/staging-values.yml \
            --set image.repository="gcr.io/$PROJECT_ID/$IMAGE" \
            --set image.tag=$GITHUB_SHA \
            ${DEPLOYMENT_NAME_STAGING} ./helm
          kubectl rollout status deployment/$DEPLOYMENT_NAME_STAGING
          kubectl get services -o wide

      - name: (TODO) RUN E2E TESTS ON STAGING 
        run: |-
          kubectl version
          helm version

      - name: Deploy to GKE cluster (Production)
        run: |-
          helm upgrade --install \
            --values=./helm/production-values.yml \
            --set image.repository="gcr.io/$PROJECT_ID/$IMAGE" \
            --set image.tag=$GITHUB_SHA \
            ${DEPLOYMENT_NAME_PRODUCTION} ./helm
          kubectl rollout status deployment/$DEPLOYMENT_NAME_PRODUCTION
          kubectl get services -o wide
